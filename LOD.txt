
Simplication


tree LOD, object LOD, terrain LOD
SSELodGen
TexGen
DynDLLOD

lighting LOD:
texture LOD
mesh LOD

static LOD, 
dynamic LOD,


discrete LOD
    There is no way to support a smooth transition between LOD levels at this level, although alpha blending or morphing can be used to avoid visual poppopping

continuous  LOD



Topology keeping algorithm: 
    Manifold, realistic
non-topology keeping algorithm
    large amount reduced, looks differently

Point Cloud VS Mesh


polygon mesh processing
Level of detail for 3D graphics

Vertex Clustering, Computing a representative:
    Average/Median vertex position
    Error quadrics(Preserve topology)

Iterative Decimation



Vertex clustering
    fast but difficult to control simplified mesh 
    topology changes, non-manifold meshes
    global error bound, but often not close to optimum
Iterative decimation with quadric error metrics
    good trade-off between mesh-quality and speed 
    explicit control over mesh topology
    restricting normal deviation improves mesh quality
    
OpenMesh:
    1. Block vertices from beeing touched by the decimater
    2. Various mesh decimation module + error quadratic decimation
    3. Mesh subdivision module
    4. View Dependent progressive meshes
    https://www.graphics.rwth-aachen.de:9000/OpenMesh/OpenMesh
    http://www.openmesh.org
QSlim

Remeshing: Mesh” → “remesh” → “pliant” →
    [Optional] flag border as feature
    [Optional] flag sharp edges as feature (dihedral angle) 
    [Optional] estimate edge size (bounding box divisions) remesh (target edge length)
    MeshLab

After reduction, display side by side

Repaire, welding consists of mergng vertices that are closer than a certain distance from each other

Polgon Cruncher: realtime preview

Polygon Optimization
    1. Quality
    2. Scalability
    3. Control
    4. Flexibility
    5. Can it keep the UV texture as well as normal, color etc?

Remeshing
Occlusion Culling 
Draw-Call Reduction
    

Polygon Cruncher
    Command Line Tool to automate the tasks without human involvement
    Progressive optimization 
    Clean up, merge mesh, split mesh

Instant Meshes
    fewer quads
    remesh quads

Simmplygon
    1. fewer triangles
    2. LESS OBJECTS
    3. Combining and creating new textures  
    4. Optimizing animation

FPLBase: Low level game library

Filament + IMGUI

MeshDecimation using VTK
VCG library beind MeshLab, http://github.com/cnr-isti-vclab/vcglib/
CGAL library

